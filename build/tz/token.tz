{ parameter
    (or (or (pair %balance_of
               (list %requests (pair (address %owner) (nat %token_id)))
               (contract %callback
                  (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
            (list %transfer
               (pair (address %from_)
                     (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
        (list %update_operators
           (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
               (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))) ;
  storage
    (pair (big_map %balances (pair (address %owner) (nat %token_id)) nat)
          (big_map %operators (pair (address %owner) (nat %token_id)) nat)) ;
  code { LAMBDA
           (pair (pair (big_map (pair address nat) nat) (big_map (pair address nat) nat))
                 (pair address nat))
           nat
           { UNPAIR ; CAR ; SWAP ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ; DROP 2 ; NIL operation ; PAIR }
               { ITER { DUP ;
                        DUG 2 ;
                        CDR ;
                        ITER { DUP ;
                               CDR ;
                               CAR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               PAIR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               CAR ;
                               DUP 5 ;
                               CAR ;
                               PAIR ;
                               DUP ;
                               DUP 5 ;
                               PAIR ;
                               DUP 7 ;
                               SWAP ;
                               EXEC ;
                               DUP 5 ;
                               CDR ;
                               DIG 5 ;
                               CAR ;
                               DUP 6 ;
                               CDR ;
                               CDR ;
                               DIG 3 ;
                               SUB ;
                               ABS ;
                               DIG 3 ;
                               SWAP ;
                               SOME ;
                               SWAP ;
                               UPDATE ;
                               PAIR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               DIG 4 ;
                               CDR ;
                               CDR ;
                               DUP 5 ;
                               DIG 4 ;
                               PAIR ;
                               DUP 7 ;
                               SWAP ;
                               EXEC ;
                               ADD ;
                               DIG 3 ;
                               SWAP ;
                               SOME ;
                               SWAP ;
                               UPDATE ;
                               PAIR } ;
                        SWAP ;
                        DROP } ;
                 SWAP ;
                 DROP ;
                 NIL operation ;
                 PAIR } }
           { DIG 2 ; DROP 2 ; NIL operation ; PAIR } } }

