{ parameter
    (or (or (or (pair %addLine
                   (pair (pair (pair (nat %betsPeriod) (string %currencyPair))
                               (pair (timestamp %lastBetsCloseTime) (nat %liquidityPercent)))
                         (pair (pair (nat %maxActiveEvents) (nat %measurePeriod))
                               (pair (nat %rateAboveEq) (nat %rateBelow))))
                   (nat %targetDynamics))
                (nat %approveLiquidity))
            (or (nat %cancelLiquidity) (pair %claimLiquidity (nat %positionId) (nat %shares))))
        (or (or (nat %createEvent) (unit %depositLiquidity))
            (or (nat %payReward) (list %withdrawLiquidity (pair (nat %eventId) (nat %positionId)))))) ;
  storage
    (pair (pair (pair (pair (pair (map %activeEvents nat nat) (nat %activeLiquidity))
                            (pair (big_map %claims
                                     (pair (nat %eventId) (nat %positionId))
                                     (pair (nat %shares) (nat %totalShares)))
                                  (nat %counter)))
                      (pair (pair (nat %entryLiquidity) (nat %entryLockPeriod))
                            (pair (big_map %entryPositions
                                     nat
                                     (pair (pair (timestamp %acceptAfter) (nat %amount)) (address %provider)))
                                  (big_map %events
                                     nat
                                     (pair (pair (pair (nat %createdCounter) (nat %lockedShares))
                                                 (pair (nat %provided) (option %result nat)))
                                           (nat %totalShares))))))
                (pair (pair (pair (address %juster)
                                  (map %lines
                                     nat
                                     (pair (pair (pair (pair (nat %betsPeriod) (string %currencyPair))
                                                       (pair (timestamp %lastBetsCloseTime) (nat %liquidityPercent)))
                                                 (pair (pair (nat %maxActiveEvents) (nat %measurePeriod))
                                                       (pair (nat %rateAboveEq) (nat %rateBelow))))
                                           (nat %targetDynamics))))
                            (pair (address %manager) (nat %maxActiveEvents)))
                      (pair (pair (mutez %newEventFee) (nat %nextEntryPositionId))
                            (pair (nat %nextEventLiquidity) (nat %nextLineId)))))
          (pair (pair (nat %nextPositionId)
                      (big_map %positions
                         nat
                         (pair (pair (nat %addedCounter) (address %provider)) (nat %shares))))
                (pair (nat %totalShares) (nat %withdrawableLiquidity)))) ;
  code { LAMBDA
           (pair (pair nat (big_map nat (pair (pair timestamp nat) address))) string)
           (pair (pair timestamp nat) address)
           { UNPAIR ; UNPAIR ; GET ; IF_NONE { FAILWITH } { SWAP ; DROP } } ;
         LAMBDA
           (pair address mutez)
           operation
           { UNPAIR ;
             CONTRACT unit ;
             IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} ;
             SWAP ;
             UNIT ;
             TRANSFER_TOKENS } ;
         LAMBDA
           (pair (pair (pair (pair (pair (pair (map nat nat) nat) (pair (big_map (pair nat nat) (pair nat nat)) nat))
                                   (pair (pair nat nat)
                                         (pair (big_map nat (pair (pair timestamp nat) address))
                                               (big_map nat (pair (pair (pair nat nat) (pair nat (option nat))) nat)))))
                             (pair (pair (pair address
                                               (map nat
                                                    (pair (pair (pair (pair nat string) (pair timestamp nat)) (pair (pair nat nat) (pair nat nat)))
                                                          nat)))
                                         (pair address nat))
                                   (pair (pair mutez nat) (pair nat nat))))
                       (pair (pair nat (big_map nat (pair (pair nat address) nat))) (pair nat nat)))
                 nat)
           (pair (pair nat address) nat)
           { UNPAIR ;
             CDR ;
             CAR ;
             CDR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH string "Position is not found" ; FAILWITH } {} } ;
         LAMBDA
           (pair (pair nat address) nat)
           unit
           { SENDER ;
             SWAP ;
             CAR ;
             CDR ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Not position owner" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair (pair (pair (pair (pair (pair (map nat nat) nat) (pair (big_map (pair nat nat) (pair nat nat)) nat))
                                   (pair (pair nat nat)
                                         (pair (big_map nat (pair (pair timestamp nat) address))
                                               (big_map nat (pair (pair (pair nat nat) (pair nat (option nat))) nat)))))
                             (pair (pair (pair address
                                               (map nat
                                                    (pair (pair (pair (pair nat string) (pair timestamp nat)) (pair (pair nat nat) (pair nat nat)))
                                                          nat)))
                                         (pair address nat))
                                   (pair (pair mutez nat) (pair nat nat))))
                       (pair (pair nat (big_map nat (pair (pair nat address) nat))) (pair nat nat)))
                 nat)
           (pair (pair (pair nat nat) (pair nat (option nat))) nat)
           { UNPAIR ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH string "Event is not found" ; FAILWITH } {} } ;
         LAMBDA
           int
           nat
           { PUSH int 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GE ;
             IF { ABS } { DROP ; PUSH nat 0 } } ;
         DIG 6 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DIG 4 ;
                 DIG 5 ;
                 DIG 6 ;
                 DROP 5 ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 5 ;
                     DUP 7 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     PUSH nat 1 ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     ADD ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     ADD ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     PAIR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { PUSH string "Entry position is not found" ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DUP 3 ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DUP 3 ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 5 ;
                     NONE (pair (pair timestamp nat) address) ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     NOW ;
                     COMPARE ;
                     LT ;
                     IF { PUSH string "Cannot approve liquidity before acceptAfter" ; FAILWITH }
                        {} ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     SUB ;
                     ABS ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH string "Need to have at least one line" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PUSH mutez 1 ;
                     BALANCE ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     ADD ;
                     SUB ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     SUB ;
                     ABS ;
                     PUSH nat 0 ;
                     DUP 4 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF { DROP ; DUP }
                        { DUP 3 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          DUP 3 ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR } ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     DIG 6 ;
                     CDR ;
                     DUP 7 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     PAIR ;
                     DUP 6 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DUP 5 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     PUSH nat 1 ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     ADD ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DUG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     ADD ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PUSH nat 1 ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     ADD ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     ADD ;
                     PAIR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DROP 4 ;
                     PUSH string "Entry position is not found" ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DUP 3 ;
                     PAIR ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DUP 3 ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 5 ;
                     NONE (pair (pair timestamp nat) address) ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Not entry position owner" ; FAILWITH } ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     SUB ;
                     ABS ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PUSH nat 0 ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     COMPARE ;
                     GT ;
                     IF { NIL operation ;
                          PUSH mutez 1 ;
                          DIG 3 ;
                          CAR ;
                          CDR ;
                          MUL ;
                          SENDER ;
                          PAIR ;
                          DIG 3 ;
                          SWAP ;
                          EXEC ;
                          CONS }
                        { SWAP ; DIG 2 ; DROP 2 ; NIL operation } ;
                     PAIR }
                   { DIG 7 ;
                     DROP ;
                     DUP ;
                     CAR ;
                     DUP 3 ;
                     PAIR ;
                     DIG 6 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     DIG 6 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CDR ;
                     DUP 3 ;
                     CDR ;
                     COMPARE ;
                     GT ;
                     IF { PUSH string "Claim shares is exceed position shares" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SUB ;
                     ABS ;
                     DUP 4 ;
                     PUSH nat 0 ;
                     PAIR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            CAR ;
                            CDR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            CAR ;
                            DIG 2 ;
                            CDR ;
                            CAR ;
                            DUP 6 ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            PAIR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            DUP 5 ;
                            PAIR ;
                            DUP 10 ;
                            SWAP ;
                            EXEC ;
                            DUP ;
                            CDR ;
                            DUP 9 ;
                            CDR ;
                            DUP 7 ;
                            CAR ;
                            CAR ;
                            CAR ;
                            CDR ;
                            CAR ;
                            DUP 5 ;
                            GET ;
                            IF_NONE { PUSH nat 0 } { CAR } ;
                            ADD ;
                            PAIR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            CAR ;
                            CAR ;
                            DUP 9 ;
                            CAR ;
                            CAR ;
                            COMPARE ;
                            LT ;
                            IF { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 DUP 3 ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 DUP 11 ;
                                 CDR ;
                                 MUL ;
                                 EDIV ;
                                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                 CAR ;
                                 DIG 5 ;
                                 ADD ;
                                 DUP 6 ;
                                 CDR ;
                                 DUP 7 ;
                                 CAR ;
                                 CDR ;
                                 DUP 8 ;
                                 CAR ;
                                 CAR ;
                                 CDR ;
                                 DUP 9 ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 CDR ;
                                 CDR ;
                                 DUP 10 ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 DIG 6 ;
                                 SOME ;
                                 DIG 8 ;
                                 UPDATE ;
                                 PAIR ;
                                 DIG 7 ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR }
                               { DIG 2 ; DROP 2 ; DIG 3 ; DIG 3 ; PAIR } ;
                            DUP ;
                            CDR ;
                            DUP 3 ;
                            CDR ;
                            DUP 4 ;
                            CAR ;
                            CDR ;
                            DUP 9 ;
                            CDR ;
                            DUP 6 ;
                            CAR ;
                            CAR ;
                            CDR ;
                            ADD ;
                            DIG 5 ;
                            CAR ;
                            CAR ;
                            CAR ;
                            PAIR ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            DUP 3 ;
                            CAR ;
                            CDR ;
                            DUP 4 ;
                            CAR ;
                            CAR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            DIG 3 ;
                            SOME ;
                            DIG 6 ;
                            UPDATE ;
                            DUP 4 ;
                            CAR ;
                            CAR ;
                            CDR ;
                            CDR ;
                            CAR ;
                            PAIR ;
                            DUP 4 ;
                            CAR ;
                            CAR ;
                            CDR ;
                            CAR ;
                            PAIR ;
                            DIG 3 ;
                            CAR ;
                            CAR ;
                            CAR ;
                            PAIR ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            CAR ;
                            PAIR } ;
                     DIG 5 ;
                     DROP ;
                     UNPAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     DIG 6 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     DUP 6 ;
                     CAR ;
                     UPDATE ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     PUSH mutez 1 ;
                     BALANCE ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     SUB ;
                     SUB ;
                     ADD ;
                     ABS ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP 5 ;
                     CDR ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DUP 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SUB ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DUP 3 ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SUB ;
                     DIG 7 ;
                     SWAP ;
                     EXEC ;
                     PAIR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     CDR ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SUB ;
                     ABS ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 6 ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SUB ;
                     ABS ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PUSH int 0 ;
                     DUP 3 ;
                     COMPARE ;
                     GT ;
                     IF { NIL operation ;
                          PUSH mutez 1 ;
                          DIG 3 ;
                          ABS ;
                          MUL ;
                          SENDER ;
                          PAIR ;
                          DIG 3 ;
                          SWAP ;
                          EXEC ;
                          CONS }
                        { SWAP ; DIG 2 ; DROP 2 ; NIL operation } ;
                     PAIR } } }
           { DIG 7 ;
             DROP ;
             IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DIG 4 ;
                 DIG 5 ;
                 DIG 6 ;
                 DROP 5 ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SIZE ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SUB ;
                     PUSH int 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { PUSH string "Max active events limit reached" ; FAILWITH } {} ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     GET ;
                     IF_NONE { PUSH string "Line is not found" ; FAILWITH } {} ;
                     PUSH nat 0 ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     ITER { SWAP ;
                            DUP 5 ;
                            DIG 2 ;
                            CDR ;
                            COMPARE ;
                            EQ ;
                            IF { PUSH nat 1 ; ADD } {} } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     COMPARE ;
                     GT ;
                     IF { PUSH string "Max active events limit reached" ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     NOW ;
                     COMPARE ;
                     LT ;
                     IF { PUSH string "Event cannot be created until previous event betsCloseTime" ;
                          FAILWITH }
                        {} ;
                     PUSH nat 1 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     NOW ;
                     SUB ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     ADD ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     MUL ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     ADD ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     PAIR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP 5 ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 7 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DUP 8 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 5 ;
                     DUP 9 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DUP 9 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 6 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CONTRACT %newEvent
                       (pair (pair (pair (timestamp %betsCloseTime) (string %currencyPair))
                                   (pair (nat %liquidityPercent) (nat %measurePeriod)))
                             (nat %targetDynamics)) ;
                     IF_NONE { PUSH string "Juster.newEvent is not found" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     DUP 4 ;
                     CDR ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 7 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     UNIT ;
                     VIEW "getNextEventId" nat ;
                     IF_NONE
                       { PUSH string "Juster.getNextEventId view is not found" ; FAILWITH }
                       {} ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CONTRACT %provideLiquidity
                       (pair (pair (nat %eventId) (nat %expectedRatioAboveEq))
                             (pair (nat %expectedRatioBelow) (nat %maxSlippage))) ;
                     IF_NONE { PUSH string "Juster.provideLiquidity is not found" ; FAILWITH } {} ;
                     PUSH mutez 1 ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SUB ;
                     PUSH mutez 1 ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     DIG 8 ;
                     ABS ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     DUP 7 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     PUSH mutez 1 ;
                     BALANCE ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     SUB ;
                     SUB ;
                     SUB ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LT ;
                     IF { SWAP ; DROP } { DROP } ;
                     PUSH int 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { PUSH string "Not enough liquidity to run event" ; FAILWITH } {} ;
                     PUSH mutez 1 ;
                     SWAP ;
                     ABS ;
                     MUL ;
                     DUP ;
                     DUG 2 ;
                     PUSH nat 0 ;
                     DUP 8 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     DIG 7 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DUP 6 ;
                     PAIR ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     PUSH mutez 1 ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     DIG 3 ;
                     ADD ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DUP 5 ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     DUP 7 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DUP 8 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     NONE nat ;
                     DUP 6 ;
                     PAIR ;
                     PUSH nat 0 ;
                     DUP 11 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP 7 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DUP 8 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 8 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 7 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 10 ;
                     DIG 9 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 5 ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     ADD ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PUSH nat 1 ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     ADD ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     DIG 2 ;
                     CONS ;
                     PAIR }
                   { DROP ;
                     PUSH mutez 1 ;
                     AMOUNT ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH string "Should provide tez" ; FAILWITH } {} ;
                     SENDER ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     INT ;
                     NOW ;
                     ADD ;
                     PAIR ;
                     PAIR ;
                     DUP 3 ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 4 ;
                     DUP 7 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     PUSH nat 1 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     ADD ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DIG 5 ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     ADD ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { DIG 4 ;
                     DIG 5 ;
                     DIG 6 ;
                     DROP 3 ;
                     PUSH mutez 1 ;
                     AMOUNT ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP 4 ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     CDR ;
                     DUP 3 ;
                     SOME ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP 4 ;
                     CDR ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     SOME ;
                     DUP 7 ;
                     UPDATE ;
                     DUP 7 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 7 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 6 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 8 ;
                     NONE nat ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 5 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     ADD ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SUB ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SUB ;
                     ABS ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     SUB ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     ADD ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     PAIR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     PUSH nat 0 ;
                     DIG 2 ;
                     PAIR ;
                     SWAP ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            CAR ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            DUP ;
                            CDR ;
                            DUP 3 ;
                            PAIR ;
                            DUP 7 ;
                            SWAP ;
                            EXEC ;
                            DUP 6 ;
                            SWAP ;
                            EXEC ;
                            DROP ;
                            DUP ;
                            CAR ;
                            DUP 3 ;
                            PAIR ;
                            DUP 5 ;
                            SWAP ;
                            EXEC ;
                            CAR ;
                            CDR ;
                            CDR ;
                            IF_NONE { PUSH string "Event result is not received yet" ; FAILWITH } {} ;
                            DUP 3 ;
                            CAR ;
                            CAR ;
                            CAR ;
                            CDR ;
                            CAR ;
                            DUP 3 ;
                            GET ;
                            IF_NONE
                              { DROP ; PUSH string "Claim is not found" ; FAILWITH }
                              { UNPAIR ;
                                DIG 2 ;
                                MUL ;
                                EDIV ;
                                IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                CAR } ;
                            DIG 3 ;
                            CAR ;
                            CDR ;
                            ADD ;
                            DUP 3 ;
                            CDR ;
                            DUP 4 ;
                            CAR ;
                            CDR ;
                            DUP 5 ;
                            CAR ;
                            CAR ;
                            CDR ;
                            DUP 6 ;
                            CAR ;
                            CAR ;
                            CAR ;
                            CDR ;
                            CDR ;
                            DUP 7 ;
                            CAR ;
                            CAR ;
                            CAR ;
                            CDR ;
                            CAR ;
                            DIG 6 ;
                            NONE (pair nat nat) ;
                            SWAP ;
                            UPDATE ;
                            PAIR ;
                            DIG 5 ;
                            CAR ;
                            CAR ;
                            CAR ;
                            CAR ;
                            PAIR ;
                            PAIR ;
                            PAIR ;
                            PAIR ;
                            PAIR } ;
                     SWAP ;
                     DIG 2 ;
                     DIG 3 ;
                     DROP 3 ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     PUSH mutez 1 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     MUL ;
                     PUSH mutez 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     GT ;
                     IF { NIL operation ; SWAP ; SENDER ; PAIR ; DIG 4 ; SWAP ; EXEC ; CONS }
                        { DIG 3 ; DROP 2 ; NIL operation } ;
                     SWAP ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     SUB ;
                     ABS ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR } } } } ;
  view "getBalance" unit mutez { DROP ; BALANCE } }

