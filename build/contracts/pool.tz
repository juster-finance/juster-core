{ parameter
    (or (or (or (or (unit %acceptOwnership)
                    (pair %addLine
                       (pair (pair (pair (nat %advanceTime) (nat %betsPeriod))
                                   (string %currencyPair)
                                   (bool %isPaused))
                             (pair (address %juster) (timestamp %lastBetsCloseTime))
                             (nat %liquidityPercent)
                             (nat %maxEvents))
                       (pair (pair (nat %measurePeriod) (nat %minBettingPeriod))
                             (nat %rateAboveEq)
                             (nat %rateBelow))
                       (nat %targetDynamics)))
                (or (nat %approveLiquidity) (nat %cancelLiquidity)))
            (or (or (pair %claimLiquidity (address %provider) (nat %shares)) (nat %createEvent))
                (or (unit %default) (unit %depositLiquidity))))
        (or (or (or (unit %disband) (nat %payReward))
                (or (address %proposeManager) (option %setDelegate key_hash)))
            (or (or (nat %setEntryLockPeriod) (unit %triggerPauseDeposit))
                (or (nat %triggerPauseLine)
                    (list %withdrawLiquidity (pair (nat %eventId) (address %provider))))))) ;
  storage
    (pair (pair (pair (pair (pair (map %activeEvents nat nat) (nat %activeLiquidityF))
                            (big_map %claims (pair (nat %eventId) (address %provider)) nat)
                            (big_map %entries
                               nat
                               (pair (pair (timestamp %acceptAfter) (nat %amount)) (address %provider))))
                      (pair (nat %entryLiquidityF) (nat %entryLockPeriod))
                      (big_map %events nat (pair (pair (nat %claimed) (nat %provided)) (option %result nat)))
                      (bool %isDepositPaused))
                (pair (pair (bool %isDisbandAllow)
                            (big_map %lines
                               nat
                               (pair (pair (pair (pair (nat %advanceTime) (nat %betsPeriod))
                                                 (string %currencyPair)
                                                 (bool %isPaused))
                                           (pair (address %juster) (timestamp %lastBetsCloseTime))
                                           (nat %liquidityPercent)
                                           (nat %maxEvents))
                                     (pair (pair (nat %measurePeriod) (nat %minBettingPeriod))
                                           (nat %rateAboveEq)
                                           (nat %rateBelow))
                                     (nat %targetDynamics))))
                      (address %manager)
                      (nat %maxEvents))
                (pair (big_map %metadata string bytes) (nat %nextEntryId))
                (nat %nextLineId)
                (nat %precision))
          (pair (address %proposedManager) (big_map %shares address nat))
          (nat %totalShares)
          (nat %withdrawableLiquidityF)) ;
  code { LAMBDA
           unit
           unit
           { DROP ;
             PUSH mutez 0 ;
             AMOUNT ;
             COMPARE ;
             GT ;
             IF { PUSH string "Including tez using this entrypoint call is not allowed" ;
                  FAILWITH }
                { UNIT } } ;
         LAMBDA
           (pair address string)
           unit
           { UNPAIR ; SENDER ; COMPARE ; NEQ ; IF { FAILWITH } { DROP ; UNIT } } ;
         LAMBDA
           (pair (lambda (pair address string) unit) address)
           unit
           { UNPAIR ; SWAP ; PUSH string "Not a contract manager" ; SWAP ; PAIR ; EXEC } ;
         DUP 2 ;
         APPLY ;
         LAMBDA
           (pair address mutez)
           operation
           { UNPAIR ;
             CONTRACT unit ;
             IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} ;
             SWAP ;
             UNIT ;
             TRANSFER_TOKENS } ;
         PUSH string "Max active events limit reached" ;
         PUSH string "Wrong state: negative entry liquidity" ;
         LAMBDA
           (pair (pair (pair (pair (pair (map nat nat) nat)
                                   (big_map (pair nat address) nat)
                                   (big_map nat (pair (pair timestamp nat) address)))
                             (pair nat nat)
                             (big_map nat (pair (pair nat nat) (option nat)))
                             bool)
                       (pair (pair bool
                                   (big_map
                                      nat
                                      (pair (pair (pair (pair nat nat) string bool) (pair address timestamp) nat nat)
                                            (pair (pair nat nat) nat nat)
                                            nat)))
                             address
                             nat)
                       (pair (big_map string bytes) nat)
                       nat
                       nat)
                 (pair address (big_map address nat))
                 nat
                 nat)
           int
           { DUP ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             DUP 2 ;
             CDR ;
             CDR ;
             CDR ;
             DIG 2 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             PUSH mutez 1 ;
             BALANCE ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             MUL ;
             SUB ;
             SUB } ;
         LAMBDA
           (pair (lambda
                    (pair (pair (pair (pair (pair (map nat nat) nat)
                                            (big_map (pair nat address) nat)
                                            (big_map nat (pair (pair timestamp nat) address)))
                                      (pair nat nat)
                                      (big_map nat (pair (pair nat nat) (option nat)))
                                      bool)
                                (pair (pair bool
                                            (big_map
                                               nat
                                               (pair (pair (pair (pair nat nat) string bool) (pair address timestamp) nat nat)
                                                     (pair (pair nat nat) nat nat)
                                                     nat)))
                                      address
                                      nat)
                                (pair (big_map string bytes) nat)
                                nat
                                nat)
                          (pair address (big_map address nat))
                          nat
                          nat)
                    int)
                 (pair (pair (pair (pair (pair (map nat nat) nat)
                                         (big_map (pair nat address) nat)
                                         (big_map nat (pair (pair timestamp nat) address)))
                                   (pair nat nat)
                                   (big_map nat (pair (pair nat nat) (option nat)))
                                   bool)
                             (pair (pair bool
                                         (big_map
                                            nat
                                            (pair (pair (pair (pair nat nat) string bool) (pair address timestamp) nat nat)
                                                  (pair (pair nat nat) nat nat)
                                                  nat)))
                                   address
                                   nat)
                             (pair (big_map string bytes) nat)
                             nat
                             nat)
                       (pair address (big_map address nat))
                       nat
                       nat))
           int
           { UNPAIR ;
             SWAP ;
             DUP ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             SWAP ;
             DIG 2 ;
             SWAP ;
             EXEC ;
             ADD } ;
         DUP 2 ;
         APPLY ;
         LAMBDA
           (pair nat
                 (pair (pair (pair (pair (map nat nat) nat)
                                   (big_map (pair nat address) nat)
                                   (big_map nat (pair (pair timestamp nat) address)))
                             (pair nat nat)
                             (big_map nat (pair (pair nat nat) (option nat)))
                             bool)
                       (pair (pair bool
                                   (big_map
                                      nat
                                      (pair (pair (pair (pair nat nat) string bool) (pair address timestamp) nat nat)
                                            (pair (pair nat nat) nat nat)
                                            nat)))
                             address
                             nat)
                       (pair (big_map string bytes) nat)
                       nat
                       nat)
                 (pair address (big_map address nat))
                 nat
                 nat)
           (pair (pair timestamp nat) address)
           { UNPAIR ;
             SWAP ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH string "Entry is not found" ; FAILWITH } {} } ;
         LAMBDA
           (pair nat
                 (pair (pair (pair (pair (map nat nat) nat)
                                   (big_map (pair nat address) nat)
                                   (big_map nat (pair (pair timestamp nat) address)))
                             (pair nat nat)
                             (big_map nat (pair (pair nat nat) (option nat)))
                             bool)
                       (pair (pair bool
                                   (big_map
                                      nat
                                      (pair (pair (pair (pair nat nat) string bool) (pair address timestamp) nat nat)
                                            (pair (pair nat nat) nat nat)
                                            nat)))
                             address
                             nat)
                       (pair (big_map string bytes) nat)
                       nat
                       nat)
                 (pair address (big_map address nat))
                 nat
                 nat)
           (pair (pair nat nat) (option nat))
           { UNPAIR ;
             SWAP ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH string "Event is not found" ; FAILWITH } {} } ;
         LAMBDA
           (pair nat
                 (pair (pair (pair (pair (map nat nat) nat)
                                   (big_map (pair nat address) nat)
                                   (big_map nat (pair (pair timestamp nat) address)))
                             (pair nat nat)
                             (big_map nat (pair (pair nat nat) (option nat)))
                             bool)
                       (pair (pair bool
                                   (big_map
                                      nat
                                      (pair (pair (pair (pair nat nat) string bool) (pair address timestamp) nat nat)
                                            (pair (pair nat nat) nat nat)
                                            nat)))
                             address
                             nat)
                       (pair (big_map string bytes) nat)
                       nat
                       nat)
                 (pair address (big_map address nat))
                 nat
                 nat)
           (pair (pair (pair (pair nat nat) string bool) (pair address timestamp) nat nat)
                 (pair (pair nat nat) nat nat)
                 nat)
           { UNPAIR ;
             SWAP ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             CDR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH string "Line is not found" ; FAILWITH } {} } ;
         LAMBDA
           (pair address
                 (pair (pair (pair (pair (map nat nat) nat)
                                   (big_map (pair nat address) nat)
                                   (big_map nat (pair (pair timestamp nat) address)))
                             (pair nat nat)
                             (big_map nat (pair (pair nat nat) (option nat)))
                             bool)
                       (pair (pair bool
                                   (big_map
                                      nat
                                      (pair (pair (pair (pair nat nat) string bool) (pair address timestamp) nat nat)
                                            (pair (pair nat nat) nat nat)
                                            nat)))
                             address
                             nat)
                       (pair (big_map string bytes) nat)
                       nat
                       nat)
                 (pair address (big_map address nat))
                 nat
                 nat)
           nat
           { UNPAIR ;
             SWAP ;
             CDR ;
             CAR ;
             CDR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH nat 0 } {} } ;
         DIG 12 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 3 ;
                 DIG 4 ;
                 DIG 7 ;
                 DIG 9 ;
                 DROP 4 ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DIG 6 ;
                     DROP 5 ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP 2 ;
                         UNIT ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string "Not allowed to accept ownership" ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 4 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR }
                       { DIG 3 ;
                         DROP ;
                         SWAP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH nat 0 ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "Line should have at least one event" ; FAILWITH } {} ;
                         DUP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 7 ;
                         DIG 6 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PUSH nat 1 ;
                         DIG 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         ADD ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         ADD ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR } ;
                     PAIR ;
                     PAIR ;
                     NIL operation }
                   { DIG 7 ;
                     DROP ;
                     IF_LEFT
                       { DIG 6 ;
                         DIG 7 ;
                         DROP 2 ;
                         SWAP ;
                         UNIT ;
                         DIG 7 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DUP 3 ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DUP 2 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 6 ;
                         NONE (pair (pair timestamp nat) address) ;
                         SWAP ;
                         UPDATE ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         MUL ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         NOW ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "Cannot approve liquidity before acceptAfter" ; FAILWITH }
                            {} ;
                         DUP ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         COMPARE ;
                         LT ;
                         IF { DIG 5 ; FAILWITH } { DIG 5 ; DROP } ;
                         DUP 3 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DUP 6 ;
                         DIG 8 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         SUB ;
                         ABS ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUG 2 ;
                         DUP 3 ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DUP 2 ;
                         INT ;
                         DUP 2 ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "Wrong state: negative total liquidity" ; FAILWITH } {} ;
                         DUP 2 ;
                         SWAP ;
                         SUB ;
                         ABS ;
                         PUSH nat 0 ;
                         DUP 5 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         EQ ;
                         IF { DROP 2 ; DUP ; CAR ; CDR }
                            { DUP 4 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              DIG 2 ;
                              MUL ;
                              EDIV ;
                              IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                              CAR } ;
                         DUP 3 ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DUP 5 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         DIG 6 ;
                         DUP 7 ;
                         CDR ;
                         PAIR ;
                         DIG 7 ;
                         SWAP ;
                         EXEC ;
                         ADD ;
                         DIG 5 ;
                         CDR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         DUP 2 ;
                         DUP ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DIG 3 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         ADD ;
                         PAIR ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         NIL operation }
                       { DIG 2 ;
                         DIG 4 ;
                         DROP 2 ;
                         SWAP ;
                         UNIT ;
                         DIG 7 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         NOT ;
                         IF { PUSH string "Cancel is not allowed" ; FAILWITH } {} ;
                         DUP ;
                         DUP 3 ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DUP 2 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 6 ;
                         NONE (pair (pair timestamp nat) address) ;
                         SWAP ;
                         UPDATE ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PUSH string "Not entry position owner" ;
                         DUP 2 ;
                         CDR ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         MUL ;
                         DUP ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         COMPARE ;
                         LT ;
                         IF { DIG 3 ; FAILWITH } { DIG 3 ; DROP } ;
                         DUP 3 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         DIG 7 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         SUB ;
                         ABS ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PUSH nat 0 ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         COMPARE ;
                         GT ;
                         IF { NIL operation ;
                              PUSH mutez 1 ;
                              DIG 2 ;
                              CAR ;
                              CDR ;
                              MUL ;
                              SENDER ;
                              PAIR ;
                              DIG 3 ;
                              SWAP ;
                              EXEC ;
                              CONS }
                            { DIG 2 ; DROP 2 ; NIL operation } } } }
               { DIG 5 ;
                 DIG 8 ;
                 DIG 11 ;
                 DROP 3 ;
                 IF_LEFT
                   { IF_LEFT
                       { DIG 3 ;
                         DIG 5 ;
                         DIG 7 ;
                         DROP 3 ;
                         SWAP ;
                         UNIT ;
                         DIG 8 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DUP 3 ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         NOT ;
                         IF { PUSH string "Not shares owner" ;
                              DUP 4 ;
                              CAR ;
                              PAIR ;
                              DIG 7 ;
                              SWAP ;
                              EXEC ;
                              DROP }
                            { DIG 6 ; DROP } ;
                         DUP ;
                         DUP 4 ;
                         CDR ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "Claim shares is exceed position shares" ; FAILWITH } {} ;
                         DUP 3 ;
                         CDR ;
                         SWAP ;
                         SUB ;
                         ABS ;
                         PUSH nat 0 ;
                         PUSH nat 0 ;
                         DUP 5 ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         IF { DIG 4 ; DROP }
                            { DUP 3 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              ITER { CAR ;
                                     DUP 4 ;
                                     DUP 2 ;
                                     PAIR ;
                                     DUP 7 ;
                                     SWAP ;
                                     EXEC ;
                                     DUP 6 ;
                                     CAR ;
                                     DUP 3 ;
                                     PAIR ;
                                     DUP 6 ;
                                     DUP 2 ;
                                     PAIR ;
                                     DUP 3 ;
                                     CAR ;
                                     CAR ;
                                     DUP 4 ;
                                     CAR ;
                                     CDR ;
                                     SUB ;
                                     ABS ;
                                     DUP 8 ;
                                     CDR ;
                                     CDR ;
                                     CAR ;
                                     SWAP ;
                                     DUP 10 ;
                                     CDR ;
                                     DUP 10 ;
                                     CAR ;
                                     CDR ;
                                     CDR ;
                                     CDR ;
                                     CDR ;
                                     MUL ;
                                     MUL ;
                                     EDIV ;
                                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                     CAR ;
                                     DUP 8 ;
                                     CAR ;
                                     CDR ;
                                     CDR ;
                                     CDR ;
                                     CDR ;
                                     SWAP ;
                                     EDIV ;
                                     IF_NONE
                                       { PUSH string "DIV / 0" ; FAILWITH }
                                       { UNPAIR ;
                                         PUSH nat 0 ;
                                         DIG 2 ;
                                         COMPARE ;
                                         GT ;
                                         IF { PUSH nat 1 ; ADD } {} } ;
                                     DUP 8 ;
                                     DUP ;
                                     CDR ;
                                     DUP 2 ;
                                     CAR ;
                                     CDR ;
                                     DUP 3 ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     DUP 4 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     CDR ;
                                     DIG 12 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     CAR ;
                                     DUP 7 ;
                                     DIG 8 ;
                                     UNPAIR ;
                                     SWAP ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     CAR ;
                                     SWAP ;
                                     GET ;
                                     IF_NONE { PUSH nat 0 } {} ;
                                     ADD ;
                                     DIG 8 ;
                                     SWAP ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     PAIR ;
                                     DIG 4 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     PAIR ;
                                     PAIR ;
                                     PAIR ;
                                     PAIR ;
                                     DUG 5 ;
                                     DUP ;
                                     DIG 4 ;
                                     ADD ;
                                     DUG 3 ;
                                     DUP 2 ;
                                     CAR ;
                                     CAR ;
                                     ADD ;
                                     DUP 2 ;
                                     CAR ;
                                     CDR ;
                                     DUP 2 ;
                                     COMPARE ;
                                     GT ;
                                     IF { PUSH string "Wrong state: locked exceed total" ; FAILWITH } {} ;
                                     DUP 6 ;
                                     DUP ;
                                     CDR ;
                                     DUP 2 ;
                                     CAR ;
                                     CDR ;
                                     DUP 3 ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     CDR ;
                                     CDR ;
                                     DIG 9 ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     CDR ;
                                     CAR ;
                                     DUP 7 ;
                                     CDR ;
                                     DIG 7 ;
                                     CAR ;
                                     CDR ;
                                     DIG 7 ;
                                     PAIR ;
                                     PAIR ;
                                     DIG 6 ;
                                     SWAP ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     PAIR ;
                                     DUP 4 ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     CAR ;
                                     PAIR ;
                                     DIG 3 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     PAIR ;
                                     PAIR ;
                                     PAIR ;
                                     DUG 2 } ;
                              DIG 4 ;
                              DROP } ;
                         DUP 3 ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DIG 4 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         DUP 6 ;
                         CAR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DUP 5 ;
                         CDR ;
                         DUP 5 ;
                         DIG 7 ;
                         SWAP ;
                         EXEC ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         PUSH int 0 ;
                         DUP 2 ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "Wrong state: negative payout" ; FAILWITH } {} ;
                         DUP 4 ;
                         CDR ;
                         DUP 4 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "Wrong state: negative total shares" ; FAILWITH } {} ;
                         DUP 3 ;
                         DUP ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 6 ;
                         CDR ;
                         DIG 5 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SUB ;
                         ABS ;
                         PAIR ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DUG 2 ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         MUL ;
                         DUP ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "Wrong state: negative active liquidity" ; FAILWITH } {} ;
                         DUP 3 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         DIG 7 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SUB ;
                         ABS ;
                         DIG 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PUSH int 0 ;
                         DUP 2 ;
                         COMPARE ;
                         GT ;
                         IF { NIL operation ;
                              PUSH mutez 1 ;
                              DIG 2 ;
                              ABS ;
                              MUL ;
                              DIG 3 ;
                              CAR ;
                              PAIR ;
                              DIG 3 ;
                              SWAP ;
                              EXEC ;
                              CONS }
                            { DIG 2 ; DIG 3 ; DROP 3 ; NIL operation } }
                       { DIG 2 ;
                         DIG 4 ;
                         DIG 8 ;
                         DIG 9 ;
                         DROP 4 ;
                         SWAP ;
                         DUP ;
                         DUP 3 ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         UNIT ;
                         VIEW "getNextEventId" nat ;
                         IF_NONE
                           { PUSH string "Juster.getNextEventId view is not found" ; FAILWITH }
                           {} ;
                         UNIT ;
                         DIG 8 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP 3 ;
                         PUSH int 0 ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SIZE ;
                         DIG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SUB ;
                         COMPARE ;
                         LE ;
                         IF { DUP 7 ; FAILWITH } {} ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         IF { PUSH string "Line is paused" ; FAILWITH } {} ;
                         DUP 3 ;
                         DUP 2 ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         MEM ;
                         IF { PUSH string "Event id is already taken" ; FAILWITH } {} ;
                         DUP 3 ;
                         DUP 3 ;
                         DUP 6 ;
                         PUSH nat 0 ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         ITER { SWAP ;
                                DUP 3 ;
                                DIG 2 ;
                                CDR ;
                                COMPARE ;
                                EQ ;
                                IF { PUSH nat 1 ; ADD } {} } ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         COMPARE ;
                         GT ;
                         IF { DIG 6 ; FAILWITH } { DIG 6 ; DROP } ;
                         DUP 2 ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         INT ;
                         SWAP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         SUB ;
                         NOW ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "Event cannot be created until previous event betsCloseTime" ;
                              FAILWITH }
                            {} ;
                         DUP 2 ;
                         PUSH nat 1 ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         NOW ;
                         SUB ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         ADD ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         NOW ;
                         COMPARE ;
                         LT ;
                         IF { PUSH nat 1 ; ADD } {} ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         MUL ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         ADD ;
                         NOW ;
                         DUP 2 ;
                         SUB ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         ABS ;
                         COMPARE ;
                         LT ;
                         IF { SWAP ; CAR ; CAR ; CAR ; CDR ; INT ; ADD } { SWAP ; DROP } ;
                         DIG 2 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 4 ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUG 2 ;
                         DUP 4 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 7 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 8 ;
                         DUP 10 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUG 3 ;
                         DUP 3 ;
                         CDR ;
                         CDR ;
                         DUP 4 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         UNIT ;
                         VIEW "getConfig"
                              (pair (pair (pair (pair (mutez %expirationFee) (bool %isEventCreationPaused))
                                                (nat %maxAllowedMeasureLag)
                                                (nat %maxLiquidityPercent))
                                          (pair (nat %maxMeasurePeriod) (nat %maxPeriodToBetsClose))
                                          (mutez %measureStartFee)
                                          (nat %minLiquidityPercent))
                                    (pair (pair (nat %minMeasurePeriod) (nat %minPeriodToBetsClose))
                                          (address %oracleAddress)
                                          (nat %providerProfitFee))
                                    (mutez %rewardCallFee)
                                    (nat %rewardFeeSplitAfter)) ;
                         IF_NONE { PUSH string "Juster.getConfig is not found" ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         ADD ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CONTRACT %newEvent
                           (pair (pair (pair (timestamp %betsCloseTime) (string %currencyPair))
                                       (nat %liquidityPercent)
                                       (nat %measurePeriod))
                                 (nat %targetDynamics)) ;
                         IF_NONE { PUSH string "Juster.newEvent is not found" ; FAILWITH } {} ;
                         DUP 2 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         PUSH nat 0 ;
                         DUP 5 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         DUP 5 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 5 ;
                         PAIR ;
                         PAIR ;
                         DUP 6 ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         DIG 10 ;
                         SWAP ;
                         EXEC ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP 2 ;
                         DIG 10 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         DUP 4 ;
                         COMPARE ;
                         GT ;
                         IF { DIG 2 ; DROP } { SWAP ; DROP } ;
                         SWAP ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         ABS ;
                         PUSH mutez 1 ;
                         PUSH mutez 1 ;
                         DUP 6 ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DIG 2 ;
                         DUP 2 ;
                         DUP 2 ;
                         COMPARE ;
                         GT ;
                         IF { SUB ; ABS }
                            { DROP 2 ; PUSH string "Not enough liquidity to run event" ; FAILWITH } ;
                         MUL ;
                         DIG 5 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CONTRACT %provideLiquidity
                           (pair (pair (nat %eventId) (nat %expectedRatioAboveEq))
                                 (nat %expectedRatioBelow)
                                 (nat %maxSlippage)) ;
                         IF_NONE { PUSH string "Juster.provideLiquidity is not found" ; FAILWITH } {} ;
                         DUP 2 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         PUSH mutez 1 ;
                         DIG 4 ;
                         DIG 3 ;
                         ADD ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP 5 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 8 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         NONE nat ;
                         DUP 7 ;
                         PUSH nat 0 ;
                         PAIR ;
                         PAIR ;
                         DUP 10 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUG 4 ;
                         DUP 5 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 9 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 10 ;
                         DIG 10 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUG 3 ;
                         DUP 4 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 9 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 6 ;
                         MUL ;
                         DIG 8 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         ADD ;
                         DIG 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         DIG 2 ;
                         CONS } }
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DIG 6 ;
                     DIG 7 ;
                     DIG 8 ;
                     DIG 9 ;
                     DIG 10 ;
                     DROP 9 ;
                     IF_LEFT
                       { DROP }
                       { DROP ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         IF { PUSH string "Deposit is paused" ; FAILWITH } {} ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         PUSH nat 0 ;
                         DUP 2 ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "Should provide tez" ; FAILWITH } {} ;
                         SENDER ;
                         DUP 2 ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         INT ;
                         NOW ;
                         ADD ;
                         PAIR ;
                         PAIR ;
                         DUP 3 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 7 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 5 ;
                         DIG 7 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         DUP 2 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PUSH nat 1 ;
                         DIG 5 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         ADD ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         DUP 2 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DUP 7 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 6 ;
                         MUL ;
                         DIG 6 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         ADD ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR } ;
                     NIL operation } } }
           { DIG 2 ;
             DIG 5 ;
             DIG 6 ;
             DIG 7 ;
             DIG 8 ;
             DIG 9 ;
             DROP 6 ;
             IF_LEFT
               { DIG 4 ;
                 DROP ;
                 IF_LEFT
                   { IF_LEFT
                       { DIG 2 ;
                         DIG 3 ;
                         DIG 5 ;
                         DROP 4 ;
                         UNIT ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PUSH bool True ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR }
                       { DIG 4 ;
                         DIG 6 ;
                         DROP 2 ;
                         SWAP ;
                         DUP ;
                         DUP 3 ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         GET ;
                         IF_NONE { PUSH string "Active event is not found" ; FAILWITH } {} ;
                         DUP 2 ;
                         SWAP ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         PUSH string "Address is not expected" ;
                         SWAP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP 2 ;
                         DUP 4 ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DUP 2 ;
                         SOME ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 6 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DUP 6 ;
                         SOME ;
                         DUP 9 ;
                         UPDATE ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUG 2 ;
                         DUP 3 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 7 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 8 ;
                         NONE nat ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         DIG 4 ;
                         MUL ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP 3 ;
                         SWAP ;
                         DIG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         ADD ;
                         DUP 2 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         DIG 2 ;
                         CAR ;
                         CDR ;
                         SUB ;
                         MUL ;
                         DUP 2 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         DIG 6 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SUB ;
                         PUSH int 0 ;
                         DUP 2 ;
                         COMPARE ;
                         GE ;
                         IF { ABS } { DROP ; PUSH nat 0 } ;
                         DIG 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR } ;
                     PAIR ;
                     PAIR ;
                     NIL operation }
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 5 ;
                     DROP 3 ;
                     IF_LEFT
                       { SWAP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         NIL operation }
                       { SWAP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         NIL operation ;
                         DIG 2 ;
                         SET_DELEGATE ;
                         CONS } } }
               { DIG 6 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DROP 3 ;
                     IF_LEFT
                       { SWAP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 4 ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR }
                       { DROP ;
                         UNIT ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         NOT ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR } ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation }
                   { IF_LEFT
                       { DIG 3 ;
                         DIG 4 ;
                         DROP 2 ;
                         SWAP ;
                         UNIT ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DUP 3 ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DUP 2 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         IF { DUP 4 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              DIG 5 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              ADD }
                            { PUSH string "Wrong state: negative events" ;
                              DUP 5 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              DIG 6 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              SUB ;
                              PUSH int 0 ;
                              DUP 2 ;
                              COMPARE ;
                              GE ;
                              IF { SWAP ; DROP ; ABS } { DROP ; FAILWITH } } ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         DUP 2 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 6 ;
                         CDR ;
                         DUP 7 ;
                         CAR ;
                         CDR ;
                         DUP 8 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         NOT ;
                         DUP 9 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 8 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 6 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         NIL operation }
                       { DIG 2 ;
                         DIG 5 ;
                         DROP 2 ;
                         SWAP ;
                         UNIT ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         EMPTY_MAP address nat ;
                         DIG 2 ;
                         ITER { DUP 3 ;
                                DUP 2 ;
                                CAR ;
                                PAIR ;
                                DUP 5 ;
                                SWAP ;
                                EXEC ;
                                DUP ;
                                CDR ;
                                IF_NONE { PUSH string "Event result is not received yet" ; FAILWITH } {} ;
                                DUP 5 ;
                                DUP 4 ;
                                SWAP ;
                                CAR ;
                                CAR ;
                                CAR ;
                                CDR ;
                                CAR ;
                                SWAP ;
                                GET ;
                                IF_NONE { PUSH string "Claim is not found" ; FAILWITH } {} ;
                                DIG 2 ;
                                CAR ;
                                CDR ;
                                DUP 6 ;
                                CAR ;
                                CDR ;
                                CDR ;
                                CDR ;
                                CDR ;
                                DIG 2 ;
                                DIG 3 ;
                                MUL ;
                                MUL ;
                                EDIV ;
                                IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                CAR ;
                                DUP 3 ;
                                DIG 3 ;
                                DUP 4 ;
                                CDR ;
                                GET ;
                                IF_NONE { SWAP } { DIG 2 ; ADD } ;
                                DUP 3 ;
                                CDR ;
                                SWAP ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                SWAP ;
                                DUP 3 ;
                                DUP ;
                                CDR ;
                                DUP 2 ;
                                CAR ;
                                CDR ;
                                DUP 3 ;
                                CAR ;
                                CAR ;
                                CDR ;
                                DUP 4 ;
                                CAR ;
                                CAR ;
                                CAR ;
                                CDR ;
                                CDR ;
                                DIG 7 ;
                                CAR ;
                                CAR ;
                                CAR ;
                                CDR ;
                                CAR ;
                                DIG 6 ;
                                NONE nat ;
                                SWAP ;
                                UPDATE ;
                                PAIR ;
                                DIG 4 ;
                                CAR ;
                                CAR ;
                                CAR ;
                                CAR ;
                                PAIR ;
                                PAIR ;
                                PAIR ;
                                PAIR ;
                                SWAP } ;
                         DIG 2 ;
                         DROP ;
                         NIL operation ;
                         SWAP ;
                         ITER { UNPAIR ;
                                PUSH mutez 1 ;
                                DUP 5 ;
                                CAR ;
                                CDR ;
                                CDR ;
                                CDR ;
                                CDR ;
                                DUP 4 ;
                                EDIV ;
                                IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                CAR ;
                                MUL ;
                                PUSH mutez 0 ;
                                DUP 2 ;
                                COMPARE ;
                                GT ;
                                IF { DIG 3 ; SWAP ; DIG 2 ; PAIR ; DUP 5 ; SWAP ; EXEC ; CONS ; SWAP }
                                   { DROP 2 } ;
                                DUP 3 ;
                                CDR ;
                                CDR ;
                                CDR ;
                                DUP 2 ;
                                COMPARE ;
                                GT ;
                                IF { PUSH string "Wrong state: negative withdrawable liquidity" ; FAILWITH }
                                   {} ;
                                DUP 3 ;
                                SWAP ;
                                DIG 3 ;
                                CDR ;
                                CDR ;
                                CDR ;
                                SUB ;
                                ABS ;
                                DUP 2 ;
                                CDR ;
                                CDR ;
                                CAR ;
                                PAIR ;
                                DUP 2 ;
                                CDR ;
                                CAR ;
                                PAIR ;
                                SWAP ;
                                CAR ;
                                PAIR ;
                                SWAP } ;
                         DIG 2 ;
                         DROP } } } } ;
         PAIR } ;
  view "getLine"
       nat
       (option
          (pair (pair (pair (pair (nat %advanceTime) (nat %betsPeriod))
                            (string %currencyPair)
                            (bool %isPaused))
                      (pair (address %juster) (timestamp %lastBetsCloseTime))
                      (nat %liquidityPercent)
                      (nat %maxEvents))
                (pair (pair (nat %measurePeriod) (nat %minBettingPeriod))
                      (nat %rateAboveEq)
                      (nat %rateBelow))
                (nat %targetDynamics)))
       { UNPAIR ; SWAP ; CAR ; CDR ; CAR ; CAR ; CDR ; SWAP ; GET } ;
  view "getEntry"
       nat
       (option (pair (pair (timestamp %acceptAfter) (nat %amount)) (address %provider)))
       { UNPAIR ; SWAP ; CAR ; CAR ; CAR ; CDR ; CDR ; SWAP ; GET } ;
  view "getNextEntryId" unit nat { CDR ; CAR ; CDR ; CDR ; CAR ; CDR } ;
  view "getShares"
       address
       (option nat)
       { UNPAIR ; SWAP ; CDR ; CAR ; CDR ; SWAP ; GET } ;
  view "getClaim"
       (pair (nat %eventId) (address %provider))
       (option nat)
       { UNPAIR ; SWAP ; CAR ; CAR ; CAR ; CDR ; CAR ; SWAP ; GET } ;
  view "getEvent"
       nat
       (option (pair (pair (nat %claimed) (nat %provided)) (option %result nat)))
       { UNPAIR ; SWAP ; CAR ; CAR ; CDR ; CDR ; CAR ; SWAP ; GET } ;
  view "getTotalShares" unit nat { CDR ; CDR ; CDR ; CAR } ;
  view "getActiveEvents" unit (map nat nat) { CDR ; CAR ; CAR ; CAR ; CAR ; CAR } ;
  view "getNextLineId" unit nat { CDR ; CAR ; CDR ; CDR ; CDR ; CAR } ;
  view "getBalance" unit mutez { DROP ; BALANCE } ;
  view "isDepositPaused" unit bool { CDR ; CAR ; CAR ; CDR ; CDR ; CDR } ;
  view "getEntryLockPeriod" unit nat { CDR ; CAR ; CAR ; CDR ; CAR ; CDR } ;
  view "getManager" unit address { CDR ; CAR ; CDR ; CAR ; CDR ; CAR } ;
  view "getNextLiquidity"
       unit
       nat
       { LAMBDA
           (pair (pair (pair (pair (pair (map nat nat) nat)
                                   (big_map (pair nat address) nat)
                                   (big_map nat (pair (pair timestamp nat) address)))
                             (pair nat nat)
                             (big_map nat (pair (pair nat nat) (option nat)))
                             bool)
                       (pair (pair bool
                                   (big_map
                                      nat
                                      (pair (pair (pair (pair nat nat) string bool) (pair address timestamp) nat nat)
                                            (pair (pair nat nat) nat nat)
                                            nat)))
                             address
                             nat)
                       (pair (big_map string bytes) nat)
                       nat
                       nat)
                 (pair address (big_map address nat))
                 nat
                 nat)
           int
           { DUP ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             DUP 2 ;
             CDR ;
             CDR ;
             CDR ;
             DIG 2 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             PUSH mutez 1 ;
             BALANCE ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             MUL ;
             SUB ;
             SUB } ;
         SWAP ;
         CDR ;
         DUP ;
         CAR ;
         CDR ;
         CAR ;
         CDR ;
         CDR ;
         DUP 2 ;
         CAR ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         DUP 3 ;
         DUP 5 ;
         SWAP ;
         EXEC ;
         ADD ;
         EDIV ;
         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
         CAR ;
         DUP 2 ;
         DIG 3 ;
         SWAP ;
         EXEC ;
         DIG 2 ;
         CAR ;
         CDR ;
         CDR ;
         CDR ;
         CDR ;
         DUP 2 ;
         DUP 4 ;
         COMPARE ;
         GT ;
         IF { DIG 2 ; DROP } { SWAP ; DROP } ;
         SWAP ;
         EDIV ;
         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
         CAR ;
         ABS } ;
  view "getStateValues"
       unit
       (pair (pair (pair (nat %activeLiquidityF) (nat %entryLiquidityF))
                   (nat %maxEvents)
                   (nat %precision))
             (nat %withdrawableLiquidityF))
       { CDR ;
         DUP ;
         CDR ;
         CDR ;
         CDR ;
         DUP 2 ;
         CAR ;
         CDR ;
         CDR ;
         CDR ;
         CDR ;
         DUP 3 ;
         CAR ;
         CDR ;
         CAR ;
         CDR ;
         CDR ;
         PAIR ;
         DUP 3 ;
         CAR ;
         CAR ;
         CDR ;
         CAR ;
         CAR ;
         DIG 3 ;
         CAR ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         PAIR ;
         PAIR ;
         PAIR } }

