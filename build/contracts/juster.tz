{ parameter
    (or (or (or (or (unit %acceptOwnership)
                    (pair %bet
                       (pair (or %bet (unit %aboveEq) (unit %below)) (nat %eventId))
                       (mutez %minimalWinAmount)))
                (or (address %changeManager) (unit %claimBakingRewards)))
            (or (or (unit %claimRetainedProfits) (nat %close))
                (or (pair %closeCallback (string %currencyPair) (timestamp %lastUpdate) (nat %rate))
                    (unit %default))))
        (or (or (or (pair %newEvent
                       (pair (pair (timestamp %betsCloseTime) (string %currencyPair))
                             (nat %liquidityPercent)
                             (nat %measurePeriod))
                       (nat %targetDynamics))
                    (pair %provideLiquidity
                       (pair (nat %eventId) (nat %expectedRatioAboveEq))
                       (nat %expectedRatioBelow)
                       (nat %maxSlippage)))
                (or (option %setDelegate key_hash) (nat %startMeasurement)))
            (or (or (pair %startMeasurementCallback
                       (string %currencyPair)
                       (timestamp %lastUpdate)
                       (nat %rate))
                    (nat %triggerForceMajeure))
                (or (lambda %updateConfig
                       (pair (pair (pair (pair (mutez %expirationFee) (bool %isEventCreationPaused))
                                         (nat %maxAllowedMeasureLag)
                                         (nat %maxLiquidityPercent))
                                   (pair (nat %maxMeasurePeriod) (nat %maxPeriodToBetsClose))
                                   (mutez %measureStartFee)
                                   (nat %minLiquidityPercent))
                             (pair (pair (nat %minMeasurePeriod) (nat %minPeriodToBetsClose))
                                   (address %oracleAddress)
                                   (nat %providerProfitFee))
                             (mutez %rewardCallFee)
                             (nat %rewardFeeSplitAfter))
                       (pair (pair (pair (pair (mutez %expirationFee) (bool %isEventCreationPaused))
                                         (nat %maxAllowedMeasureLag)
                                         (nat %maxLiquidityPercent))
                                   (pair (nat %maxMeasurePeriod) (nat %maxPeriodToBetsClose))
                                   (mutez %measureStartFee)
                                   (nat %minLiquidityPercent))
                             (pair (pair (nat %minMeasurePeriod) (nat %minPeriodToBetsClose))
                                   (address %oracleAddress)
                                   (nat %providerProfitFee))
                             (mutez %rewardCallFee)
                             (nat %rewardFeeSplitAfter)))
                    (pair %withdraw (nat %eventId) (address %participantAddress)))))) ;
  storage
    (pair (pair (pair (pair (pair (mutez %bakingRewards) (big_map %betsAboveEq (pair address nat) mutez))
                            (big_map %betsBelow (pair address nat) mutez)
                            (option %closeCallId nat))
                      (pair (pair %config
                               (pair (pair (pair (mutez %expirationFee) (bool %isEventCreationPaused))
                                           (nat %maxAllowedMeasureLag)
                                           (nat %maxLiquidityPercent))
                                     (pair (nat %maxMeasurePeriod) (nat %maxPeriodToBetsClose))
                                     (mutez %measureStartFee)
                                     (nat %minLiquidityPercent))
                               (pair (pair (nat %minMeasurePeriod) (nat %minPeriodToBetsClose))
                                     (address %oracleAddress)
                                     (nat %providerProfitFee))
                               (mutez %rewardCallFee)
                               (nat %rewardFeeSplitAfter))
                            (big_map %depositedBets (pair address nat) mutez))
                      (big_map %depositedLiquidity (pair address nat) mutez)
                      (big_map %events
                         nat
                         (pair (pair (pair (pair (pair (timestamp %betsCloseTime) (option %closedDynamics nat))
                                                 (option %closedOracleTime timestamp)
                                                 (option %closedRate nat))
                                           (pair (timestamp %createdTime) (address %creator))
                                           (string %currencyPair)
                                           (mutez %expirationFee))
                                     (pair (pair (option %isBetsAboveEqWin bool) (bool %isClosed))
                                           (bool %isForceMajeure)
                                           (nat %liquidityPercent))
                                     (pair (nat %maxAllowedMeasureLag) (option %measureOracleStartTime timestamp))
                                     (nat %measurePeriod)
                                     (mutez %measureStartFee))
                               (pair (pair (address %oracleAddress) (mutez %poolAboveEq))
                                     (mutez %poolBelow)
                                     (mutez %rewardCallFee))
                               (pair (option %startRate nat) (nat %targetDynamics))
                               (nat %totalLiquidityShares))))
                (pair (pair (big_map %isWithdrawn (pair address nat) unit) (nat %liquidityPrecision))
                      (big_map %liquidityShares (pair address nat) nat)
                      (address %manager))
                (pair (option %measurementStartCallId nat) (big_map %metadata string bytes))
                (nat %nextEventId)
                (option %proposedManager address))
          (pair (pair (big_map %providedLiquidityAboveEq (pair address nat) mutez)
                      (big_map %providedLiquidityBelow (pair address nat) mutez))
                (nat %providerProfitFeePrecision)
                (nat %ratioPrecision))
          (pair (mutez %retainedProfits) (nat %sharePrecision))
          (nat %targetDynamicsPrecision)) ;
  code { LAMBDA
           unit
           unit
           { DROP ;
             PUSH mutez 0 ;
             AMOUNT ;
             COMPARE ;
             GT ;
             IF { PUSH string "Including tez using this entrypoint call is not allowed" ;
                  FAILWITH }
                { UNIT } } ;
         LAMBDA
           address
           unit
           { SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Not a contract manager" ; FAILWITH } { UNIT } } ;
         LAMBDA
           address
           (contract unit)
           { CONTRACT unit ;
             IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} } ;
         LAMBDA
           mutez
           nat
           { PUSH mutez 1 ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR } ;
         LAMBDA nat mutez { PUSH mutez 1 ; SWAP ; MUL } ;
         LAMBDA
           (pair nat nat)
           nat
           { UNPAIR ;
             DUP 2 ;
             DUP 2 ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DUP 3 ;
             DIG 2 ;
             EDIV ;
             IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
             CDR ;
             PUSH nat 2 ;
             DIG 3 ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             SWAP ;
             COMPARE ;
             GT ;
             IF { PUSH nat 1 ; ADD } {} } ;
         LAMBDA
           (pair (pair (pair (pair (pair (pair mutez (big_map (pair address nat) mutez))
                                         (big_map (pair address nat) mutez)
                                         (option nat))
                                   (pair (pair (pair (pair (pair mutez bool) nat nat) (pair nat nat) mutez nat)
                                               (pair (pair nat nat) address nat)
                                               mutez
                                               nat)
                                         (big_map (pair address nat) mutez))
                                   (big_map (pair address nat) mutez)
                                   (big_map
                                      nat
                                      (pair (pair (pair (pair (pair timestamp (option nat)) (option timestamp) (option nat))
                                                        (pair timestamp address)
                                                        string
                                                        mutez)
                                                  (pair (pair (option bool) bool) bool nat)
                                                  (pair nat (option timestamp))
                                                  nat
                                                  mutez)
                                            (pair (pair address mutez) mutez mutez)
                                            (pair (option nat) nat)
                                            nat)))
                             (pair (pair (big_map (pair address nat) unit) nat)
                                   (big_map (pair address nat) nat)
                                   address)
                             (pair (option nat) (big_map string bytes))
                             nat
                             (option address))
                       (pair (pair (big_map (pair address nat) mutez) (big_map (pair address nat) mutez)) nat nat)
                       (pair mutez nat)
                       nat)
                 nat)
           (pair (pair (pair (pair (pair timestamp (option nat)) (option timestamp) (option nat))
                             (pair timestamp address)
                             string
                             mutez)
                       (pair (pair (option bool) bool) bool nat)
                       (pair nat (option timestamp))
                       nat
                       mutez)
                 (pair (pair address mutez) mutez mutez)
                 (pair (option nat) nat)
                 nat)
           { UNPAIR ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH string "Event is not found" ; FAILWITH } {} } ;
         LAMBDA
           (pair (pair address nat) (big_map (pair address nat) mutez))
           mutez
           { UNPAIR ; GET ; IF_NONE { PUSH mutez 0 } {} } ;
         LAMBDA
           (pair (pair address nat) (big_map (pair address nat) nat))
           nat
           { UNPAIR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         LAMBDA
           (pair (lambda
                    (pair (pair (pair (pair (pair (pair mutez (big_map (pair address nat) mutez))
                                                  (big_map (pair address nat) mutez)
                                                  (option nat))
                                            (pair (pair (pair (pair (pair mutez bool) nat nat) (pair nat nat) mutez nat)
                                                        (pair (pair nat nat) address nat)
                                                        mutez
                                                        nat)
                                                  (big_map (pair address nat) mutez))
                                            (big_map (pair address nat) mutez)
                                            (big_map
                                               nat
                                               (pair (pair (pair (pair (pair timestamp (option nat)) (option timestamp) (option nat))
                                                                 (pair timestamp address)
                                                                 string
                                                                 mutez)
                                                           (pair (pair (option bool) bool) bool nat)
                                                           (pair nat (option timestamp))
                                                           nat
                                                           mutez)
                                                     (pair (pair address mutez) mutez mutez)
                                                     (pair (option nat) nat)
                                                     nat)))
                                      (pair (pair (big_map (pair address nat) unit) nat)
                                            (big_map (pair address nat) nat)
                                            address)
                                      (pair (option nat) (big_map string bytes))
                                      nat
                                      (option address))
                                (pair (pair (big_map (pair address nat) mutez) (big_map (pair address nat) mutez)) nat nat)
                                (pair mutez nat)
                                nat)
                          nat)
                    (pair (pair (pair (pair (pair timestamp (option nat)) (option timestamp) (option nat))
                                      (pair timestamp address)
                                      string
                                      mutez)
                                (pair (pair (option bool) bool) bool nat)
                                (pair nat (option timestamp))
                                nat
                                mutez)
                          (pair (pair address mutez) mutez mutez)
                          (pair (option nat) nat)
                          nat))
                 (pair (pair nat
                             (pair (pair (pair (pair mutez (big_map (pair address nat) mutez))
                                               (big_map (pair address nat) mutez)
                                               (option nat))
                                         (pair (pair (pair (pair (pair mutez bool) nat nat) (pair nat nat) mutez nat)
                                                     (pair (pair nat nat) address nat)
                                                     mutez
                                                     nat)
                                               (big_map (pair address nat) mutez))
                                         (big_map (pair address nat) mutez)
                                         (big_map
                                            nat
                                            (pair (pair (pair (pair (pair timestamp (option nat)) (option timestamp) (option nat))
                                                              (pair timestamp address)
                                                              string
                                                              mutez)
                                                        (pair (pair (option bool) bool) bool nat)
                                                        (pair nat (option timestamp))
                                                        nat
                                                        mutez)
                                                  (pair (pair address mutez) mutez mutez)
                                                  (pair (option nat) nat)
                                                  nat)))
                                   (pair (pair (big_map (pair address nat) unit) nat)
                                         (big_map (pair address nat) nat)
                                         address)
                                   (pair (option nat) (big_map string bytes))
                                   nat
                                   (option address))
                             (pair (pair (big_map (pair address nat) mutez) (big_map (pair address nat) mutez)) nat nat)
                             (pair mutez nat)
                             nat)
                       (contract (pair string timestamp nat))))
           (list operation)
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             UNPAIR ;
             SWAP ;
             PAIR ;
             DIG 2 ;
             SWAP ;
             EXEC ;
             DUP ;
             CDR ;
             CAR ;
             CAR ;
             CAR ;
             CONTRACT %get
               (pair string
                     (contract (pair (string %currencyPair) (timestamp %lastUpdate) (nat %rate)))) ;
             IF_NONE { PUSH string "No oracle found" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 3 ;
             DIG 3 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             TRANSFER_TOKENS ;
             NIL operation ;
             SWAP ;
             CONS } ;
         DUP 4 ;
         APPLY ;
         LAMBDA
           (pair (lambda address (contract unit)) (pair address mutez))
           (list operation)
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             NIL operation ;
             PUSH mutez 0 ;
             DUP 4 ;
             COMPARE ;
             GT ;
             IF { SWAP ; DIG 3 ; SWAP ; EXEC ; DIG 2 ; UNIT ; TRANSFER_TOKENS ; CONS }
                { SWAP ; DIG 2 ; DIG 3 ; DROP 3 } } ;
         DUP 9 ;
         APPLY ;
         LAMBDA
           (pair (lambda address (contract unit)) (pair (pair mutez address) nat))
           operation
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             UNPAIR ;
             DUP 2 ;
             CONTRACT %payReward nat ;
             IF_NONE
               { DIG 2 ;
                 DROP ;
                 SWAP ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 UNIT ;
                 TRANSFER_TOKENS }
               { DIG 2 ; DIG 4 ; DROP 2 ; SWAP ; DIG 2 ; TRANSFER_TOKENS } } ;
         DUP 10 ;
         APPLY ;
         DIG 12 ;
         UNPAIR ;
         IF_LEFT
           { DIG 2 ;
             DIG 5 ;
             DIG 8 ;
             DIG 11 ;
             DROP 4 ;
             IF_LEFT
               { DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 7 ;
                     DROP 2 ;
                     IF_LEFT
                       { DIG 2 ;
                         DIG 3 ;
                         DIG 4 ;
                         DIG 5 ;
                         DROP 5 ;
                         UNIT ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         IF_NONE { PUSH string "Not allowed to accept ownership" ; FAILWITH } {} ;
                         SENDER ;
                         DUP 2 ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "Not allowed to accept ownership" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         NONE address ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR }
                       { DIG 6 ;
                         DROP ;
                         SWAP ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP ;
                         DUP 3 ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         PUSH mutez 0 ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         EQ ;
                         PUSH mutez 0 ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         OR ;
                         IF { PUSH string "Can't process bet before liquidity added" ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         NOW ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "Bets after betCloseTime is not allowed" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "Bet without tez" ; FAILWITH } {} ;
                         DUP 2 ;
                         SENDER ;
                         PAIR ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         IF_LEFT
                           { DROP ; DUP 2 ; CDR ; CAR ; CAR ; CDR ; DUP 9 ; SWAP ; EXEC }
                           { DROP ; DUP 2 ; CDR ; CAR ; CDR ; CAR ; DUP 9 ; SWAP ; EXEC } ;
                         DUP 6 ;
                         CAR ;
                         CAR ;
                         IF_LEFT
                           { DROP ; DUP 3 ; CDR ; CAR ; CDR ; CAR ; DUP 10 ; SWAP ; EXEC }
                           { DROP ; DUP 3 ; CDR ; CAR ; CAR ; CDR ; DUP 10 ; SWAP ; EXEC } ;
                         AMOUNT ;
                         DIG 10 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         DIG 3 ;
                         ADD ;
                         DUG 2 ;
                         DUP 3 ;
                         DUP 3 ;
                         DUP 3 ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP 8 ;
                         DUP 7 ;
                         DIG 2 ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SUB ;
                         ABS ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         NOW ;
                         SUB ;
                         PUSH int 0 ;
                         DUP 2 ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "Bet adding before event createdTime" ; FAILWITH } {} ;
                         ABS ;
                         DIG 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SUB ;
                         ABS ;
                         DIG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         DIG 2 ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP 3 ;
                         SWAP ;
                         DUP ;
                         DUP 3 ;
                         DIG 2 ;
                         COMPARE ;
                         GT ;
                         IF { DROP } { SWAP ; DROP } ;
                         DUP ;
                         DIG 3 ;
                         SUB ;
                         ABS ;
                         DUG 2 ;
                         ADD ;
                         DUP 10 ;
                         SWAP ;
                         EXEC ;
                         DUP 8 ;
                         CDR ;
                         DUP 2 ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "Wrong minimalWinAmount" ; FAILWITH } {} ;
                         DIG 7 ;
                         CAR ;
                         CAR ;
                         IF_LEFT
                           { DROP ;
                             DUP 7 ;
                             DUP ;
                             CDR ;
                             DUP 2 ;
                             CAR ;
                             CDR ;
                             DUP 3 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DUP 4 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DUP 12 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DIG 6 ;
                             DIG 12 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DUP 11 ;
                             PAIR ;
                             DUP 14 ;
                             SWAP ;
                             EXEC ;
                             ADD ;
                             DUP 10 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             DIG 5 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             DUG 5 ;
                             DIG 3 ;
                             DUP ;
                             CDR ;
                             CDR ;
                             DUP 2 ;
                             CDR ;
                             CAR ;
                             CDR ;
                             DIG 4 ;
                             DUP 10 ;
                             SWAP ;
                             EXEC ;
                             DUP 4 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             CDR ;
                             DUP 2 ;
                             CDR ;
                             CAR ;
                             CDR ;
                             CDR ;
                             DIG 3 ;
                             DIG 8 ;
                             SWAP ;
                             EXEC ;
                             PAIR ;
                             DUP 3 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             CAR }
                           { DROP ;
                             DUP 7 ;
                             DUP ;
                             CDR ;
                             DUP 2 ;
                             CAR ;
                             CDR ;
                             DUP 3 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DUP 4 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CDR ;
                             DUP 12 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CAR ;
                             DIG 6 ;
                             DIG 12 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CAR ;
                             DUP 11 ;
                             PAIR ;
                             DUP 14 ;
                             SWAP ;
                             EXEC ;
                             ADD ;
                             DUP 10 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             DIG 4 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             DUG 5 ;
                             DIG 3 ;
                             DUP ;
                             CDR ;
                             CDR ;
                             DUP 2 ;
                             CDR ;
                             CAR ;
                             CDR ;
                             DIG 3 ;
                             DUP 10 ;
                             SWAP ;
                             EXEC ;
                             DUP 4 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             CDR ;
                             DUP 2 ;
                             CDR ;
                             CAR ;
                             CDR ;
                             CDR ;
                             DIG 3 ;
                             DIG 8 ;
                             SWAP ;
                             EXEC ;
                             PAIR ;
                             DUP 3 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             CAR } ;
                         PAIR ;
                         SWAP ;
                         DUP 4 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 8 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         AMOUNT ;
                         DIG 9 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DUP 8 ;
                         PAIR ;
                         DIG 10 ;
                         SWAP ;
                         EXEC ;
                         ADD ;
                         DIG 6 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUG 2 ;
                         DUP 3 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 4 ;
                         DIG 5 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR } ;
                     PAIR ;
                     PAIR ;
                     NIL operation }
                   { DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DIG 6 ;
                     DROP 4 ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CDR ;
                         DIG 2 ;
                         SOME ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         NIL operation }
                       { DROP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PUSH mutez 0 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP } } }
               { DIG 4 ;
                 DIG 6 ;
                 DIG 7 ;
                 DROP 3 ;
                 IF_LEFT
                   { DIG 4 ;
                     DROP ;
                     IF_LEFT
                       { DIG 3 ;
                         DROP 2 ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         PUSH mutez 0 ;
                         PAIR ;
                         PAIR ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR }
                       { DIG 2 ;
                         DIG 4 ;
                         DROP 2 ;
                         SWAP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         IF_NONE
                           {}
                           { DROP ;
                             PUSH string "Another call to oracle in process (should not be here)" ;
                             FAILWITH } ;
                         SELF %closeCallback ;
                         DUP 2 ;
                         DUP 4 ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         SOME ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR } ;
                     PAIR ;
                     SWAP }
                   { DIG 3 ;
                     DIG 5 ;
                     DROP 2 ;
                     IF_LEFT
                       { SWAP ;
                         UNIT ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         IF_NONE { PUSH string "closeCallId is empty" ; FAILWITH } {} ;
                         DUP ;
                         DUP 3 ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "Unknown sender" ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DUP 5 ;
                         CAR ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "Unexpected currency pair" ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         IF_NONE
                           { PUSH string "Can't close event before measurement period started" ;
                             FAILWITH }
                           {} ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         INT ;
                         ADD ;
                         DUP ;
                         DUP 6 ;
                         GET 3 ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string
                                   "Can't close until lastUpdate reached measureStartTime + measurePeriod" ;
                              FAILWITH }
                            {} ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         INT ;
                         ADD ;
                         DUP 5 ;
                         GET 3 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "Close failed: oracle time exceed maxAllowedMeasureLag" ;
                              FAILWITH }
                            {} ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         IF_NONE
                           {}
                           { DROP ;
                             PUSH string "Event already closed. Can't close event twice" ;
                             FAILWITH } ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 8 ;
                         GET 3 ;
                         SOME ;
                         PAIR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 7 ;
                         GET 4 ;
                         SOME ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         IF_NONE
                           { DIG 3 ; DROP ; PUSH string "event.startRate is empty" ; FAILWITH }
                           { DUP 4 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             DIG 5 ;
                             GET 4 ;
                             MUL ;
                             EDIV ;
                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                             CAR } ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 6 ;
                         SOME ;
                         DIG 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         PUSH bool True ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         DUP 2 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 6 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 6 ;
                         COMPARE ;
                         GE ;
                         SOME ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         SOURCE ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         PUSH mutez 0 ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         DUP 4 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DIG 6 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 5 ;
                         DIG 6 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         NONE nat ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP }
                       { DIG 2 ;
                         DIG 3 ;
                         DIG 4 ;
                         DROP 4 ;
                         DUP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         AMOUNT ;
                         DIG 6 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         ADD ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation } } } }
           { IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DIG 11 ;
                 DROP 3 ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 9 ;
                     DIG 10 ;
                     DROP 3 ;
                     IF_LEFT
                       { DIG 2 ;
                         DIG 3 ;
                         DIG 4 ;
                         DIG 5 ;
                         DIG 6 ;
                         DIG 7 ;
                         DROP 6 ;
                         SWAP ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         ADD ;
                         AMOUNT ;
                         SWAP ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "measureStartFee and expirationFee should be provided" ;
                              FAILWITH }
                            {} ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "measurePeriod is exceed maximum value" ; FAILWITH } {} ;
                         DUP ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "measurePeriod is less than minimal value" ; FAILWITH } {} ;
                         NOW ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SUB ;
                         PUSH int 0 ;
                         DUP 2 ;
                         COMPARE ;
                         LE ;
                         IF { PUSH string "betsCloseTime should be in the future" ; FAILWITH } {} ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DUP 2 ;
                         ABS ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "betsCloseTime is exceed maximum allowed period" ; FAILWITH }
                            {} ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         ABS ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "betsCloseTime is less than minimal allowed period" ; FAILWITH }
                            {} ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "liquidityPercent is exceed maximum value" ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "liquidityPercent is less than minimal value" ; FAILWITH }
                            {} ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         IF { PUSH string "Event creation is paused" ; FAILWITH } {} ;
                         PUSH nat 0 ;
                         DUP 4 ;
                         CDR ;
                         NONE nat ;
                         PAIR ;
                         PAIR ;
                         DUP 2 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PUSH mutez 0 ;
                         PAIR ;
                         PUSH mutez 0 ;
                         DUP 4 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         NONE timestamp ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PUSH bool False ;
                         PAIR ;
                         PUSH bool False ;
                         NONE bool ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PAIR ;
                         SENDER ;
                         NOW ;
                         PAIR ;
                         PAIR ;
                         NONE nat ;
                         NONE timestamp ;
                         PAIR ;
                         NONE nat ;
                         DIG 6 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP 2 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 4 ;
                         DIG 5 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PUSH nat 1 ;
                         DIG 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         ADD ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR }
                       { SWAP ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         DUP ;
                         DUP 6 ;
                         PAIR ;
                         DIG 9 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         ADD ;
                         DUP 3 ;
                         SENDER ;
                         PAIR ;
                         AMOUNT ;
                         DUP 15 ;
                         SWAP ;
                         EXEC ;
                         DUP 4 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         COMPARE ;
                         EQ ;
                         PUSH nat 0 ;
                         DUP 3 ;
                         COMPARE ;
                         EQ ;
                         DUP 2 ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "Wrong state" ; FAILWITH } {} ;
                         DUP ;
                         IF { DUP 9 } { DUP 5 ; CDR ; CAR ; CAR ; CDR ; DUP 17 ; SWAP ; EXEC } ;
                         DUP 2 ;
                         IF { DIG 16 ; DROP ; DUP 9 }
                            { DUP 6 ; CDR ; CAR ; CDR ; CAR ; DIG 17 ; SWAP ; EXEC } ;
                         PUSH nat 0 ;
                         DUP 11 ;
                         COMPARE ;
                         EQ ;
                         PUSH nat 0 ;
                         DUP 13 ;
                         COMPARE ;
                         EQ ;
                         OR ;
                         IF { PUSH string "Expected ratio in pool should be more than zero" ; FAILWITH }
                            {} ;
                         DUP 7 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         NOW ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "Providing Liquidity after betCloseTime is not allowed" ;
                              FAILWITH }
                            {} ;
                         DIG 9 ;
                         DUP 10 ;
                         DIG 11 ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP 2 ;
                         DUP 11 ;
                         DUP 5 ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP ;
                         DUP 3 ;
                         COMPARE ;
                         GT ;
                         IF { SWAP ;
                              DUP 11 ;
                              MUL ;
                              EDIV ;
                              IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                              CAR }
                            { DUP 11 ;
                              MUL ;
                              EDIV ;
                              IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                              CAR } ;
                         DUP 10 ;
                         SWAP ;
                         SUB ;
                         ABS ;
                         DIG 11 ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "Expected ratio very differs from current pool ratio" ;
                              FAILWITH }
                            {} ;
                         DUP 2 ;
                         DUP 2 ;
                         DUP 4 ;
                         COMPARE ;
                         LT ;
                         IF { DROP ; DUP } {} ;
                         DUP ;
                         DIG 3 ;
                         DUP 7 ;
                         MUL ;
                         PAIR ;
                         DUP 14 ;
                         SWAP ;
                         EXEC ;
                         DUP 2 ;
                         DIG 3 ;
                         DUP 7 ;
                         MUL ;
                         PAIR ;
                         DIG 13 ;
                         SWAP ;
                         EXEC ;
                         PUSH nat 0 ;
                         DUP 2 ;
                         COMPARE ;
                         EQ ;
                         PUSH nat 0 ;
                         DUP 4 ;
                         COMPARE ;
                         EQ ;
                         OR ;
                         IF { PUSH string "Zero liquidity provided" ; FAILWITH } {} ;
                         DIG 3 ;
                         IF { DIG 2 ; DROP ; DIG 7 }
                            { DIG 8 ;
                              DROP ;
                              DIG 2 ;
                              DUP 4 ;
                              DUP 6 ;
                              MUL ;
                              EDIV ;
                              IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                              CAR } ;
                         PUSH nat 0 ;
                         DUP 2 ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "Added liquidity is less than one share" ; FAILWITH } {} ;
                         DUP 7 ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DUP 6 ;
                         DUP 16 ;
                         SWAP ;
                         EXEC ;
                         DIG 10 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         ADD ;
                         DUP 4 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DUG 6 ;
                         DUP 7 ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 5 ;
                         DUP 16 ;
                         SWAP ;
                         EXEC ;
                         DIG 10 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         ADD ;
                         PAIR ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DUG 6 ;
                         DUP 9 ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 13 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 7 ;
                         DUP 17 ;
                         SWAP ;
                         EXEC ;
                         DIG 13 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DUP 12 ;
                         PAIR ;
                         DUP 16 ;
                         SWAP ;
                         EXEC ;
                         ADD ;
                         DUP 11 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DUG 7 ;
                         DUP 8 ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DUP 11 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         DUP 15 ;
                         SWAP ;
                         EXEC ;
                         DIG 11 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 10 ;
                         PAIR ;
                         DUP 14 ;
                         SWAP ;
                         EXEC ;
                         ADD ;
                         DUP 9 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 4 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DUG 6 ;
                         DUP 7 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 11 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 7 ;
                         DIG 14 ;
                         SWAP ;
                         EXEC ;
                         DIG 11 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DUP 10 ;
                         PAIR ;
                         DIG 13 ;
                         SWAP ;
                         EXEC ;
                         ADD ;
                         DUP 9 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUG 5 ;
                         DUP 6 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 10 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 6 ;
                         DIG 11 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 10 ;
                         PAIR ;
                         DIG 12 ;
                         SWAP ;
                         EXEC ;
                         ADD ;
                         DIG 8 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUG 4 ;
                         DIG 2 ;
                         SWAP ;
                         DIG 2 ;
                         ADD ;
                         DUP 2 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 4 ;
                         DIG 5 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR } ;
                     PAIR ;
                     PAIR ;
                     NIL operation }
                   { DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DIG 6 ;
                     DIG 7 ;
                     DIG 8 ;
                     DROP 6 ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         NIL operation ;
                         DIG 2 ;
                         SET_DELEGATE ;
                         CONS }
                       { DIG 3 ;
                         DROP ;
                         SWAP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         IF_NONE
                           {}
                           { DROP ;
                             PUSH string "Another call to oracle in process (should not be here)" ;
                             FAILWITH } ;
                         SELF %startMeasurementCallback ;
                         DUP 2 ;
                         DUP 4 ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         SOME ;
                         PAIR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP } } }
               { DIG 4 ;
                 DIG 8 ;
                 DROP 2 ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 4 ;
                     DIG 5 ;
                     DIG 7 ;
                     DIG 8 ;
                     DIG 10 ;
                     DROP 6 ;
                     IF_LEFT
                       { DIG 4 ;
                         DROP ;
                         SWAP ;
                         UNIT ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         IF_NONE { PUSH string "measurementStartCallId is empty" ; FAILWITH } {} ;
                         DUP ;
                         DUP 3 ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "Unknown sender" ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DUP 5 ;
                         CAR ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "Unexpected currency pair" ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         IF_NONE
                           {}
                           { DROP ; PUSH string "Measurement period already started" ; FAILWITH } ;
                         DUP 4 ;
                         GET 3 ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "Can't start measurement untill oracle time > betsCloseTime" ;
                              FAILWITH }
                            {} ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         INT ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         ADD ;
                         DUP 5 ;
                         GET 3 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "Measurement failed: oracle time exceed maxAllowedMeasureLag" ;
                              FAILWITH }
                            {} ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 6 ;
                         GET 3 ;
                         SOME ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         GET 4 ;
                         SOME ;
                         PAIR ;
                         PAIR ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         SOURCE ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         PUSH mutez 0 ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         DUP 4 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DIG 6 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 5 ;
                         DIG 6 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         NONE nat ;
                         PAIR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR }
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         UNIT ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP 2 ;
                         DUP 2 ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         IF { PUSH string "Already in Force Majeure state" ; FAILWITH } {} ;
                         NIL operation ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         IF_NONE
                           { DUP 2 ;
                             DUP ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             NOW ;
                             SUB ;
                             SWAP ;
                             CAR ;
                             CDR ;
                             CDR ;
                             CAR ;
                             CAR ;
                             DUP 2 ;
                             ABS ;
                             COMPARE ;
                             GT ;
                             PUSH int 0 ;
                             DIG 2 ;
                             COMPARE ;
                             GT ;
                             AND }
                           { DROP ; PUSH bool False } ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         IF_NONE
                           { DUP 3 ;
                             DUP ;
                             CAR ;
                             CDR ;
                             CDR ;
                             CDR ;
                             CAR ;
                             DUP 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             NOW ;
                             SUB ;
                             SUB ;
                             SWAP ;
                             CAR ;
                             CDR ;
                             CDR ;
                             CAR ;
                             CAR ;
                             DUP 2 ;
                             ABS ;
                             COMPARE ;
                             GT ;
                             PUSH int 0 ;
                             DIG 2 ;
                             COMPARE ;
                             GT ;
                             AND }
                           { DROP ; PUSH bool False } ;
                         OR ;
                         IF { SENDER ;
                              DIG 5 ;
                              SWAP ;
                              EXEC ;
                              DUP 3 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              DUP 4 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              ADD ;
                              SWAP ;
                              DUP 2 ;
                              UNIT ;
                              TRANSFER_TOKENS ;
                              PUSH mutez 0 ;
                              DIG 2 ;
                              COMPARE ;
                              GT ;
                              IF { CONS } { DROP } ;
                              SWAP ;
                              DUP ;
                              CDR ;
                              DUP 2 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              PUSH bool True ;
                              PAIR ;
                              DUP 4 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              DIG 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              DUP 2 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              PUSH bool True ;
                              DUP 5 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DIG 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              PUSH mutez 0 ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              DIG 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              DUP 2 ;
                              CAR ;
                              CDR ;
                              PUSH mutez 0 ;
                              DUP 4 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              DUP 4 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              DIG 3 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              SWAP }
                            { DIG 4 ;
                              DROP ;
                              PUSH string "None of the Force Majeure scenarios are occurred" ;
                              FAILWITH } ;
                         DUP 3 ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 5 ;
                         DIG 6 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR } ;
                     PAIR ;
                     PAIR ;
                     SWAP }
                   { DIG 3 ;
                     DROP ;
                     IF_LEFT
                       { DIG 2 ;
                         DIG 3 ;
                         DIG 4 ;
                         DIG 5 ;
                         DIG 6 ;
                         DIG 7 ;
                         DIG 8 ;
                         DIG 10 ;
                         DROP 8 ;
                         SWAP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation }
                       { DIG 9 ;
                         DROP ;
                         SWAP ;
                         UNIT ;
                         DIG 10 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP 2 ;
                         CAR ;
                         DUP 2 ;
                         PAIR ;
                         DIG 6 ;
                         SWAP ;
                         EXEC ;
                         DUP 3 ;
                         CAR ;
                         DUP 4 ;
                         CDR ;
                         PAIR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         IF {}
                            { PUSH string "Withdraw is not allowed until event is closed" ; FAILWITH } ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         IF { SWAP ;
                              DIG 5 ;
                              DIG 7 ;
                              DIG 8 ;
                              DIG 9 ;
                              DROP 5 ;
                              DUP ;
                              DUP 3 ;
                              DUP ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              DUP 3 ;
                              PAIR ;
                              DUP 8 ;
                              SWAP ;
                              EXEC ;
                              SWAP ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DIG 2 ;
                              PAIR ;
                              DIG 6 ;
                              SWAP ;
                              EXEC ;
                              ADD ;
                              PUSH mutez 0 ;
                              DUP 2 ;
                              COMPARE ;
                              GT ;
                              IF { NIL operation ;
                                   DUP 5 ;
                                   CAR ;
                                   DIG 5 ;
                                   CDR ;
                                   DIG 3 ;
                                   PAIR ;
                                   PAIR ;
                                   DIG 4 ;
                                   SWAP ;
                                   EXEC ;
                                   CONS }
                                 { DIG 3 ; DIG 4 ; DROP 3 ; NIL operation } }
                            { DUP ;
                              DUP 3 ;
                              DUP 5 ;
                              DUP ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DUP 4 ;
                              PAIR ;
                              DUP 11 ;
                              SWAP ;
                              EXEC ;
                              DUP 13 ;
                              SWAP ;
                              EXEC ;
                              DUP 2 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DUP 5 ;
                              PAIR ;
                              DUP 12 ;
                              SWAP ;
                              EXEC ;
                              DUP 14 ;
                              SWAP ;
                              EXEC ;
                              DUP 4 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              IF_NONE { PUSH string "Winner is undefined" ; FAILWITH } {} ;
                              DUP 4 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DUP 7 ;
                              PAIR ;
                              DIG 12 ;
                              SWAP ;
                              EXEC ;
                              DUP 5 ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DUP 8 ;
                              PAIR ;
                              DUP 14 ;
                              SWAP ;
                              EXEC ;
                              DUP 16 ;
                              SWAP ;
                              EXEC ;
                              DUP 6 ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DUP 9 ;
                              PAIR ;
                              DUP 15 ;
                              SWAP ;
                              EXEC ;
                              DUP 17 ;
                              SWAP ;
                              EXEC ;
                              DUP 7 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              DIG 9 ;
                              PAIR ;
                              DIG 14 ;
                              SWAP ;
                              EXEC ;
                              DUP 16 ;
                              SWAP ;
                              EXEC ;
                              DUP 9 ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DUP 17 ;
                              SWAP ;
                              EXEC ;
                              DUP 10 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DUP 18 ;
                              SWAP ;
                              EXEC ;
                              DIG 10 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              PUSH int 0 ;
                              PUSH nat 0 ;
                              DUP 3 ;
                              COMPARE ;
                              EQ ;
                              IF { SWAP ; DIG 2 ; DIG 3 ; DIG 5 ; DIG 6 ; DIG 7 ; DROP 6 }
                                 { DROP ;
                                   DUP 8 ;
                                   IF { DIG 2 ;
                                        DIG 5 ;
                                        DROP 2 ;
                                        DIG 3 ;
                                        SWAP ;
                                        DIG 2 ;
                                        DIG 4 ;
                                        MUL ;
                                        EDIV ;
                                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                        CAR ;
                                        SUB }
                                      { SWAP ;
                                        DIG 4 ;
                                        DROP 2 ;
                                        DIG 3 ;
                                        SWAP ;
                                        DIG 2 ;
                                        DIG 4 ;
                                        MUL ;
                                        EDIV ;
                                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                        CAR ;
                                        SUB } } ;
                              PUSH int 0 ;
                              DUP 2 ;
                              COMPARE ;
                              GT ;
                              IF { DUP 6 ;
                                   CDR ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   DIG 6 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   DUP 3 ;
                                   ABS ;
                                   MUL ;
                                   EDIV ;
                                   IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                   CAR }
                                 { DIG 5 ; DROP ; PUSH nat 0 } ;
                              DUP 2 ;
                              ABS ;
                              DUP 2 ;
                              COMPARE ;
                              GT ;
                              IF { PUSH string "Fee is more than 100%" ; FAILWITH } {} ;
                              DUP ;
                              DIG 2 ;
                              DIG 3 ;
                              ADD ;
                              SUB ;
                              ABS ;
                              SWAP ;
                              DIG 2 ;
                              IF { DIG 2 ; DROP } { DIG 3 ; DROP } ;
                              DIG 2 ;
                              PAIR ;
                              PAIR ;
                              DUP 4 ;
                              DUP ;
                              CDR ;
                              CDR ;
                              CDR ;
                              DUP 2 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DUP 4 ;
                              CAR ;
                              CDR ;
                              DUP 11 ;
                              SWAP ;
                              EXEC ;
                              DIG 7 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              ADD ;
                              PAIR ;
                              PAIR ;
                              DUP 2 ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DUG 3 ;
                              UNPAIR ;
                              CAR ;
                              ADD ;
                              DIG 2 ;
                              PAIR ;
                              DIG 3 ;
                              DUP 4 ;
                              DIG 2 ;
                              UNPAIR ;
                              DUP 3 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              DIG 9 ;
                              SWAP ;
                              EXEC ;
                              SWAP ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              IF_NONE
                                { PUSH string "Wrong state: caulculating fee for unfinished event" ;
                                  FAILWITH }
                                {} ;
                              DIG 3 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              INT ;
                              ADD ;
                              NOW ;
                              COMPARE ;
                              GE ;
                              DUP 4 ;
                              CDR ;
                              SENDER ;
                              COMPARE ;
                              NEQ ;
                              AND ;
                              IF { DUP ; DUP 3 ; COMPARE ; LT ; IF { DROP ; DUP } {} }
                                 { DROP ; PUSH nat 0 } ;
                              DUP ;
                              DIG 2 ;
                              SUB ;
                              NIL operation ;
                              PUSH int 0 ;
                              DUP 3 ;
                              COMPARE ;
                              GT ;
                              IF { DUP 4 ;
                                   CAR ;
                                   DIG 4 ;
                                   CDR ;
                                   DIG 3 ;
                                   ABS ;
                                   DUP 9 ;
                                   SWAP ;
                                   EXEC ;
                                   PAIR ;
                                   PAIR ;
                                   DIG 5 ;
                                   SWAP ;
                                   EXEC ;
                                   CONS }
                                 { SWAP ; DIG 3 ; DIG 6 ; DROP 3 } ;
                              PUSH nat 0 ;
                              DUP 3 ;
                              COMPARE ;
                              GT ;
                              IF { SENDER ;
                                   DIG 6 ;
                                   SWAP ;
                                   EXEC ;
                                   DIG 2 ;
                                   DIG 5 ;
                                   SWAP ;
                                   EXEC ;
                                   UNIT ;
                                   TRANSFER_TOKENS ;
                                   CONS }
                                 { SWAP ; DIG 4 ; DIG 5 ; DROP 3 } } ;
                         DUP 2 ;
                         DUP 4 ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 3 ;
                         MEM ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 4 ;
                         MEM ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         MEM ;
                         OR ;
                         OR ;
                         IF {} { PUSH string "Participant not found" ; FAILWITH } ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DUP 3 ;
                         MEM ;
                         IF { SWAP ; DROP ; PUSH string "Already withdrawn" ; FAILWITH }
                            { DUP 3 ;
                              DUP ;
                              CDR ;
                              DUP 2 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DUP 4 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 7 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              UNIT ;
                              DIG 8 ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DIG 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              SWAP } } } } } ;
         PAIR } ;
  view "getNextEventId" unit nat { CDR ; CAR ; CDR ; CDR ; CDR ; CAR } ;
  view "getPosition"
       (pair address nat)
       (pair (pair (pair (mutez %betsAboveEq) (mutez %betsBelow))
                   (mutez %depositedBets)
                   (mutez %depositedLiquidity))
             (pair (bool %isWithdrawn) (nat %liquidityShares))
             (mutez %providedLiquidityAboveEq)
             (mutez %providedLiquidityBelow))
       { LAMBDA
           (pair (pair address nat) (big_map (pair address nat) mutez))
           mutez
           { UNPAIR ; GET ; IF_NONE { PUSH mutez 0 } {} } ;
         SWAP ;
         UNPAIR ;
         DUP 2 ;
         CAR ;
         CDR ;
         CAR ;
         CDR ;
         CAR ;
         DUP 2 ;
         MEM ;
         DUP 3 ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         CAR ;
         DUP 3 ;
         MEM ;
         DUP 4 ;
         CAR ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         DUP 4 ;
         MEM ;
         OR ;
         OR ;
         IF {} { PUSH string "Position is not found" ; FAILWITH } ;
         DUP 2 ;
         CDR ;
         CAR ;
         CAR ;
         CDR ;
         DUP 2 ;
         PAIR ;
         DUP 4 ;
         SWAP ;
         EXEC ;
         DUP 3 ;
         CDR ;
         CAR ;
         CAR ;
         CAR ;
         DUP 3 ;
         PAIR ;
         DUP 5 ;
         SWAP ;
         EXEC ;
         PAIR ;
         DUP 3 ;
         CAR ;
         CDR ;
         CAR ;
         CDR ;
         CAR ;
         DUP 3 ;
         GET ;
         IF_NONE { PUSH nat 0 } {} ;
         DUP 4 ;
         CAR ;
         CDR ;
         CAR ;
         CAR ;
         CAR ;
         DUP 4 ;
         MEM ;
         PAIR ;
         PAIR ;
         DUP 3 ;
         CAR ;
         CAR ;
         CDR ;
         CDR ;
         CAR ;
         DUP 3 ;
         PAIR ;
         DUP 5 ;
         SWAP ;
         EXEC ;
         DUP 4 ;
         CAR ;
         CAR ;
         CDR ;
         CAR ;
         CDR ;
         DUP 4 ;
         PAIR ;
         DUP 6 ;
         SWAP ;
         EXEC ;
         PAIR ;
         DUP 4 ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         CAR ;
         DUP 4 ;
         PAIR ;
         DUP 6 ;
         SWAP ;
         EXEC ;
         DIG 4 ;
         CAR ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         DIG 4 ;
         PAIR ;
         DIG 4 ;
         SWAP ;
         EXEC ;
         PAIR ;
         PAIR ;
         PAIR } ;
  view "getEvent"
       nat
       (pair (pair (pair (pair (pair (timestamp %betsCloseTime) (option %closedDynamics nat))
                               (option %closedOracleTime timestamp)
                               (option %closedRate nat))
                         (pair (timestamp %createdTime) (address %creator))
                         (string %currencyPair)
                         (mutez %expirationFee))
                   (pair (pair (option %isBetsAboveEqWin bool) (bool %isClosed))
                         (bool %isForceMajeure)
                         (nat %liquidityPercent))
                   (pair (nat %maxAllowedMeasureLag) (option %measureOracleStartTime timestamp))
                   (nat %measurePeriod)
                   (mutez %measureStartFee))
             (pair (pair (address %oracleAddress) (mutez %poolAboveEq))
                   (mutez %poolBelow)
                   (mutez %rewardCallFee))
             (pair (option %startRate nat) (nat %targetDynamics))
             (nat %totalLiquidityShares))
       { UNPAIR ;
         SWAP ;
         CAR ;
         CAR ;
         CDR ;
         CDR ;
         CDR ;
         SWAP ;
         GET ;
         IF_NONE { PUSH string "Event is not found" ; FAILWITH } {} } ;
  view "isParticipatedInEvent"
       (pair address nat)
       bool
       { UNPAIR ;
         DUP 2 ;
         CAR ;
         CDR ;
         CAR ;
         CDR ;
         CAR ;
         DUP 2 ;
         MEM ;
         DUP 3 ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         CAR ;
         DUP 3 ;
         MEM ;
         DIG 3 ;
         CAR ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         DIG 3 ;
         MEM ;
         OR ;
         OR } ;
  view "getConfig"
       unit
       (pair (pair (pair (pair (mutez %expirationFee) (bool %isEventCreationPaused))
                         (nat %maxAllowedMeasureLag)
                         (nat %maxLiquidityPercent))
                   (pair (nat %maxMeasurePeriod) (nat %maxPeriodToBetsClose))
                   (mutez %measureStartFee)
                   (nat %minLiquidityPercent))
             (pair (pair (nat %minMeasurePeriod) (nat %minPeriodToBetsClose))
                   (address %oracleAddress)
                   (nat %providerProfitFee))
             (mutez %rewardCallFee)
             (nat %rewardFeeSplitAfter))
       { CDR ; CAR ; CAR ; CDR ; CAR ; CAR } }

